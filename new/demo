#!/usr/bin/env python
import argparse
import os
import yaml
import re
import itertools

parser = argparse.ArgumentParser()
parser.add_argument(
    '--template',
    help='',
    default='./new/test/script.sh',
    required=False
)
parser.add_argument(
    '--space',
    help='Path to parameter space .',
    default="./new/test/config.yml",
    required=False
)

if not os.path.exists("./new/output"):
    os.makedirs("./new/output")
args = vars(parser.parse_args())
ext = os.path.splitext(args['template'])[1]
with open(args['template']) as temp:
    template = temp.read()
    print(template)

with open(args['space']) as f:
    dataMap = yaml.safe_load(f)
    # print(dataMap.items())

params = re.findall(r'(?<={__).*?(?=__})', template)
print(set(params))
params = list(set(params))
params.sort()
new_params = list(map(lambda x: "__" + x + "__", params))

# print(new_params)
kw = {}
vals = []
for k, v in sorted(dataMap.items()):
    vals.append(v)
count = 0
for comb in itertools.product(*vals):
    # print(zip(new_params, comb))
    count += 1
    for tup in zip(new_params, comb):
        kw[tup[0]] = tup[1]
    # print(kw)
    print("file://new/output/output_{}-{}{}".format(str(count).zfill(3), comb, ext))
    print(template.format(**kw))
    with open("./new/output/output_{}-{}{}".format(str(count).zfill(3), comb, ext), 'w') as f:
        f.write(template.format(**kw))
